#ifndef EXTENTS_BTREE_H_SNJZPJIW
#define EXTENTS_BTREE_H_SNJZPJIW

#include "btree.h"

#include <vector>

using namespace std;
////////////////////////////////////////////////////////////////////////////////
//
//
//
////////////////////////////////////////////////////////////////////////////////
typedef BTreeRecord<HFSPlusExtentKey, HFSPlusExtentData> ExtentsRecord;
typedef BTreeNode<ExtentsRecord> ExtentsNode;

class ExtentsTree;

template <> 
struct BTreeTraits<ExtentsTree>
{
  typedef ExtentsNode Node;
  typedef ExtentsRecord Record;
  typedef HFSPlusExtentKey SearchKey;
};

////////////////////////////////////////////////////////////////////////////////
//
//
//
////////////////////////////////////////////////////////////////////////////////
class ExtentsTree: public BTree<ExtentsTree>
{
public:
  ExtentsTree(HFSFile* file);
  ~ExtentsTree();
  
public:
  int compare_keys(HFSPlusExtentKey const& key1, HFSPlusExtentKey const& key2) const;

  auto search_extents(HFSPlusExtentKey const& key) -> ExtentsRecord;
};

////////////////////////////////////////////////////////////////////////////////
//
//
//
////////////////////////////////////////////////////////////////////////////////
#endif
