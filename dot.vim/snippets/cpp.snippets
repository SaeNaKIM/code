# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r"))
	{
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}

# std::map
snippet map
	std::map<${1:key}, ${2:value}> ${3};

# std::vector
snippet vector
	std::vector<${1:char}> ${2};

# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`} {
		${2}
	} /* end of $1 */

# Class
snippet class
	class ${1:`Filename('$1', 'name')`} 
	{
	public:
		$1(${2});
		~$1();

	private:
		${3:/* data */}
	};

snippet fori
	for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++})
	{
		${4:/* code */}
	}

# auto iterator
snippet fora
	for (auto ${1:it} = ${2:container}.begin(); $1 != $2.end(); ++$1)
	{
		${3:/* code */}
	}

snippet fore
	for_each(${1:container}.begin(), $1.end(), ${2:lambda});


# member function implementations
snippet mfun
	${4:void} ${1:`Filename('$1', 'ClassName')`}::${2:memberFunction}(${3})
	{
		${5:return};
	}
