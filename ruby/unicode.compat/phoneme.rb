class Phoneme
  def initialize
    @consonant ||= {
      # compat    cho     jong
      0x3131 => [0x1100, 0x11A8],  # ㄱ
      0x3132 => [0x1101, 0x11A9],  # ㄲ
      0x3133 => [0x0000, 0x11AA],  # ㄱㅅ
      0x3134 => [0x1102, 0x11AB],  # ㄴ
      0x3135 => [0x0000, 0x11AC],  # ㄴㅈ
      0x3136 => [0x0000, 0x11AD],  # ㄴㅎ
      0x3137 => [0x1103, 0x11AE],  # ㄷ
      0x3138 => [0x1104, 0x1104],  # ㄸ
      0x3139 => [0x1105, 0x11AF],  # ㄹ
      0x313A => [0x11B0, 0x11B0],  # ㄹ
      0x313B => [0x0000, 0x11B1],  # ㄹㅁ
      0x313C => [0x0000, 0x11B2],  # ㄹㅂ
      0x3141 => [0x1106, 0x11B7],  # ㅁ
      0x3142 => [0x1107, 0x11B8],  # ㅂ
      0x3143 => [0x1108, 0x0000],  # ㅃ
      0x3145 => [0x1109, 0x11BA],  # ㅅ
      0x3146 => [0x110A, 0x11BB],  # ㅆ
      0x3147 => [0x110B, 0x11BC],  # ㅇ
      0x3148 => [0x110C, 0x11BD],  # ㅈ
      0x3149 => [0x110D, 0x0000],  # ㅉ
      0x314A => [0x110E, 0x11BE],  # ㅊ
      0x314B => [0x110F, 0x11BF],  # ㅋ
      0x314C => [0x1110, 0x11C0],  # ㅌ
      0x314D => [0x1111, 0x11C1],  # ㅍ
      0x314E => [0x1112, 0x11C2]   # ㅎ
    }

    @vowel ||= {
      # compat
      0x314F => 0x1161,  # ㅏ
      0x3150 => 0x1162,  # ㅐ 
      0x3151 => 0x1163,  # ㅑ
      0x3152 => 0x1164,  # ㅒ
      0x3153 => 0x1165,  # ㅓ
      0x3154 => 0x1166,  # ㅔ
      0x3155 => 0x1167,  # ㅕ
      0x3156 => 0x1168,  # ㅖ
      0x3157 => 0x1169,  # ㅗ
      0x3158 => 0x116A,  # ㅘ
      0x3159 => 0x116B,  # ㅙ
      0x315A => 0x116C,  # ㅚ
      0x315B => 0x116D,  # ㅛ
      0x315C => 0x116E,  # ㅜ
      0x315D => 0x116F,  # ㅝ
      0x315E => 0x1170,  # ㅞ
      0x315F => 0x1171,  # ㅟ
      0x3160 => 0x1172,  # ㅠ 
      0x3161 => 0x1173,  # ㅡ
      0x3162 => 0x1174,  # ㅢ
      0x3163 => 0x1175   # ㅣ
    }
  end

  def translate(code, pos=0)
    return 0 if 0x3131..0x314e.include?(code) and pos > 1

    case code
    when 0x3131..0x314e then @consonant[code][pos]
    when 0x314f..0x3163 then code - 8174
    else
      0
    end
  end
end
