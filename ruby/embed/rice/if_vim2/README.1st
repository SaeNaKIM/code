
  * Interface

    print "Hello"                          # displays a message
    VIM.command(cmd)                       # execute an ex command
    num  = VIM::Window.count               # gets the number of windows
    w    = VIM::Window[n]                  # gets window "n"
    cw   = VIM::Window.current             # gets the current window
    num  = VIM::Buffer.count               # gets the number of buffers
    b    = VIM::Buffer[n]                  # gets buffer "n"
    cb   = VIM::Buffer.current             # gets the current buffer
    w.height = lines                       # sets the window height
    w.cursor = [row, col]                  # sets the window cursor position
    pos  = w.cursor                        # gets an array [row, col]
    name = b.name                          # gets the buffer file name
    line = b[n]                            # gets a line from the buffer
    num  = b.count                         # gets the number of lines
    b[n] = str                             # sets a line in the buffer
    b.delete(n)                            # deletes a line
    b.append(n, str)                       # appends a line after n
    line = VIM::Buffer.current.line        # gets the current line
    num  = VIM::Buffer.current.line_number # gets the current line number
    VIM::Buffer.current.line = "test"      # sets the current line number

  * Notice

    native class와 extension class가 엄격하게 분리되면 모든게 깔끔해진다.

    1. Data_Object<WindowExt> o(new WindowExt(&windows[index])) 

    c++에서 native로 유지하고 있는 데이타를 ruby로 pointer를 넘길때는
    gc가 손대지 못하게 gc_mark, gc_free를 rice 사용자가 
    직접 제어해야한다.
