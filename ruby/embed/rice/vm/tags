!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
Init_Test	main.cpp	/^extern "C" void Init_Test();$/;"	p	file:	signature:()
Init_Test	test.cpp	/^extern "C" void Init_Test()$/;"	f	signature:()
RUBYEVAL_H	rubyeval.h	/^#define RUBYEVAL_H$/;"	d
RubyEval	rubyeval.cpp	/^RubyEval::RubyEval()$/;"	f	class:RubyEval	signature:()
RubyEval	rubyeval.h	/^  RubyEval();$/;"	p	class:RubyEval	access:private	signature:()
RubyEval	rubyeval.h	/^class RubyEval $/;"	c
RubyEval::RubyEval	rubyeval.cpp	/^RubyEval::RubyEval()$/;"	f	class:RubyEval	signature:()
RubyEval::RubyEval	rubyeval.h	/^  RubyEval();$/;"	p	class:RubyEval	access:private	signature:()
RubyEval::delete_instance	rubyeval.cpp	/^void RubyEval::delete_instance()$/;"	f	class:RubyEval	signature:()
RubyEval::delete_instance	rubyeval.h	/^  static void      delete_instance();$/;"	p	class:RubyEval	access:public	signature:()
RubyEval::eval	rubyeval.cpp	/^VALUE RubyEval::eval(const char* code)$/;"	f	class:RubyEval	signature:(const char* code)
RubyEval::eval	rubyeval.cpp	/^VALUE RubyEval::eval(const char* code, ostream& errout)$/;"	f	class:RubyEval	signature:(const char* code, ostream& errout)
RubyEval::eval	rubyeval.h	/^  VALUE eval(char const* code);$/;"	p	class:RubyEval	access:public	signature:(char const* code)
RubyEval::eval	rubyeval.h	/^  VALUE eval(char const* code, std::ostream& errout);$/;"	p	class:RubyEval	access:public	signature:(char const* code, std::ostream& errout)
RubyEval::evalOk	rubyeval.cpp	/^bool RubyEval::evalOk()$/;"	f	class:RubyEval	signature:()
RubyEval::evalOk	rubyeval.h	/^  bool evalOk();$/;"	p	class:RubyEval	access:public	signature:()
RubyEval::exception_print	rubyeval.cpp	/^void RubyEval::exception_print(ostream& errout)$/;"	f	class:RubyEval	signature:(ostream& errout)
RubyEval::exception_print	rubyeval.h	/^  void exception_print(std::ostream& errout = std::cerr);$/;"	p	class:RubyEval	access:public	signature:(std::ostream& errout = std::cerr)
RubyEval::instance	rubyeval.cpp	/^RubyEval* RubyEval::instance() $/;"	f	class:RubyEval	signature:()
RubyEval::instance	rubyeval.h	/^  static RubyEval* instance();$/;"	p	class:RubyEval	access:public	signature:()
RubyEval::m_instance	rubyeval.h	/^  static RubyEval* m_instance;$/;"	m	class:RubyEval	access:private
RubyEval::m_status	rubyeval.h	/^  int m_status;$/;"	m	class:RubyEval	access:private
RubyEval::run_file	rubyeval.cpp	/^void RubyEval::run_file(const char* filename, ostream& out)$/;"	f	class:RubyEval	signature:(const char* filename, ostream& out)
RubyEval::run_file	rubyeval.h	/^  void run_file(char const* filename, std::ostream& out = std::cout);$/;"	p	class:RubyEval	access:public	signature:(char const* filename, std::ostream& out = std::cout)
RubyEval::strval2str	rubyeval.cpp	/^string RubyEval::strval2str(const VALUE rval)$/;"	f	class:RubyEval	signature:(const VALUE rval)
RubyEval::strval2str	rubyeval.h	/^  static std::string strval2str(VALUE const rval);$/;"	p	class:RubyEval	access:public	signature:(VALUE const rval)
RubyEval::val2i	rubyeval.cpp	/^int RubyEval::val2i(const VALUE rval)$/;"	f	class:RubyEval	signature:(const VALUE rval)
RubyEval::val2i	rubyeval.h	/^	static int         val2i     (VALUE const rval);$/;"	p	class:RubyEval	access:public	signature:(VALUE const rval)
RubyEval::val2str	rubyeval.cpp	/^string RubyEval::val2str(const VALUE rval)$/;"	f	class:RubyEval	signature:(const VALUE rval)
RubyEval::val2str	rubyeval.h	/^	static std::string val2str   (VALUE const rval);$/;"	p	class:RubyEval	access:public	signature:(VALUE const rval)
RubyEval::~RubyEval	rubyeval.cpp	/^RubyEval::~RubyEval()$/;"	f	class:RubyEval	signature:()
RubyEval::~RubyEval	rubyeval.h	/^  ~RubyEval();$/;"	p	class:RubyEval	access:public	signature:()
TRACE_HEAD	rubyeval.cpp	/^#define TRACE_HEAD /;"	d	file:
TRACE_MAX	rubyeval.cpp	/^#define TRACE_MAX /;"	d	file:
TRACE_TAIL	rubyeval.cpp	/^#define TRACE_TAIL /;"	d	file:
delete_instance	rubyeval.cpp	/^void RubyEval::delete_instance()$/;"	f	class:RubyEval	signature:()
delete_instance	rubyeval.h	/^  static void      delete_instance();$/;"	p	class:RubyEval	access:public	signature:()
eval	rubyeval.cpp	/^VALUE RubyEval::eval(const char* code)$/;"	f	class:RubyEval	signature:(const char* code)
eval	rubyeval.cpp	/^VALUE RubyEval::eval(const char* code, ostream& errout)$/;"	f	class:RubyEval	signature:(const char* code, ostream& errout)
eval	rubyeval.h	/^  VALUE eval(char const* code);$/;"	p	class:RubyEval	access:public	signature:(char const* code)
eval	rubyeval.h	/^  VALUE eval(char const* code, std::ostream& errout);$/;"	p	class:RubyEval	access:public	signature:(char const* code, std::ostream& errout)
evalOk	rubyeval.cpp	/^bool RubyEval::evalOk()$/;"	f	class:RubyEval	signature:()
evalOk	rubyeval.h	/^  bool evalOk();$/;"	p	class:RubyEval	access:public	signature:()
exception_print	rubyeval.cpp	/^void RubyEval::exception_print(ostream& errout)$/;"	f	class:RubyEval	signature:(ostream& errout)
exception_print	rubyeval.h	/^  void exception_print(std::ostream& errout = std::cerr);$/;"	p	class:RubyEval	access:public	signature:(std::ostream& errout = std::cerr)
instance	rubyeval.cpp	/^RubyEval* RubyEval::instance() $/;"	f	class:RubyEval	signature:()
instance	rubyeval.h	/^  static RubyEval* instance();$/;"	p	class:RubyEval	access:public	signature:()
m_instance	rubyeval.h	/^  static RubyEval* m_instance;$/;"	m	class:RubyEval	access:private
m_status	rubyeval.h	/^  int m_status;$/;"	m	class:RubyEval	access:private
main	main.cpp	/^int main()$/;"	f	signature:()
run_file	rubyeval.cpp	/^void RubyEval::run_file(const char* filename, ostream& out)$/;"	f	class:RubyEval	signature:(const char* filename, ostream& out)
run_file	rubyeval.h	/^  void run_file(char const* filename, std::ostream& out = std::cout);$/;"	p	class:RubyEval	access:public	signature:(char const* filename, std::ostream& out = std::cout)
strval2str	rubyeval.cpp	/^string RubyEval::strval2str(const VALUE rval)$/;"	f	class:RubyEval	signature:(const VALUE rval)
strval2str	rubyeval.h	/^  static std::string strval2str(VALUE const rval);$/;"	p	class:RubyEval	access:public	signature:(VALUE const rval)
test_hello	test.cpp	/^Object test_hello(Object)$/;"	f	signature:(Object)
test_initialize	test.cpp	/^Object test_initialize(Object self)$/;"	f	signature:(Object self)
val2i	rubyeval.cpp	/^int RubyEval::val2i(const VALUE rval)$/;"	f	class:RubyEval	signature:(const VALUE rval)
val2i	rubyeval.h	/^	static int         val2i     (VALUE const rval);$/;"	p	class:RubyEval	access:public	signature:(VALUE const rval)
val2str	rubyeval.cpp	/^string RubyEval::val2str(const VALUE rval)$/;"	f	class:RubyEval	signature:(const VALUE rval)
val2str	rubyeval.h	/^	static std::string val2str   (VALUE const rval);$/;"	p	class:RubyEval	access:public	signature:(VALUE const rval)
~RubyEval	rubyeval.cpp	/^RubyEval::~RubyEval()$/;"	f	class:RubyEval	signature:()
~RubyEval	rubyeval.h	/^  ~RubyEval();$/;"	p	class:RubyEval	access:public	signature:()
