#ifndef DATA_STORE_H
#define DATA_STORE_H

#include <boost/utility.hpp>
#include <vector>
#include <string>
////////////////////////////////////////////////////////////////////////////////
//
//
//
////////////////////////////////////////////////////////////////////////////////
class FileSystem;

class DataStore: private boost::noncopyable
{
public:
  static DataStore& instance()
  {
    static DataStore singleton;
    return singleton;
  }

public:
  auto get_file_systems() -> std::vector<FileSystem*>&;
  auto device_name()      -> std::string;

private:
  DataStore();

private:
  std::vector<FileSystem*> _filesystems;
};

////////////////////////////////////////////////////////////////////////////////
//
//
//
////////////////////////////////////////////////////////////////////////////////
#endif
